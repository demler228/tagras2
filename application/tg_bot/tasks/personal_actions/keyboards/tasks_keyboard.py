from aiogram.utils.keyboard import InlineKeyboardBuilder
from application.tg_bot.office_maps.personal_actions.keyboards.callback_factories import BackToSectionCallbackFactory
from domain.tasks.db_bl import TasksDbBl

from .callback_factories import (
    TaskPersonalCallbackFactory, BackTasksListCallbackFactory
)
from application.tg_bot.faq.personal_actions.keyboards import BackToMenuCallbackFactory
from utils.data_state import DataSuccess


def get_tasks_for_user_keyboard(tg_id):
    builder = InlineKeyboardBuilder()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    data_state = TasksDbBl.get_tasks_by_tg_id(tg_id)
    if isinstance(data_state, DataSuccess):
        for task in data_state.data:
            builder.button(
                text=task.name,
                callback_data=TaskPersonalCallbackFactory(task_id=task.id)
            )
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        builder.button(text="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞–Ω–∏–π", callback_data="error")

    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data=BackToMenuCallbackFactory()
    )
    builder.adjust(1)
    return builder.as_markup()


def back_to_tasks_list_personal():
    builder = InlineKeyboardBuilder()

    builder.button(text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∑–∞–¥–∞–Ω–∏–π", callback_data=BackTasksListCallbackFactory())

    builder.adjust(1)
    return builder.as_markup()
