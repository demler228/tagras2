from aiogram.utils.keyboard import InlineKeyboardBuilder
from .callback_factories import (
    BuildingCallbackFactory,
    FloorCallbackFactory,
    SectionCallbackFactory,
    BackCallbackFactory,
    BackToBuildingCallbackFactory,
)
from application.tg_bot.faq.personal_actions.keyboards import BackToMenuCallbackFactory
from domain.office_maps.db_bl import BuildingDbBl, FloorDbBl, SectionDbBl
from utils.data_state import DataSuccess


def get_buildings_keyboard():
    builder = InlineKeyboardBuilder()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    data_state = BuildingDbBl.get_buildings()
    if isinstance(data_state, DataSuccess):
        for building in data_state.data:
            builder.button(
                text=building.name,
                callback_data=BuildingCallbackFactory(building_id=building.id)
            )
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        builder.button(text="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–¥–∞–Ω–∏–π", callback_data="error")

    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data=BackToMenuCallbackFactory()
    )
    builder.adjust(1)
    return builder.as_markup()


def get_floors_keyboard(building_id: int):
    builder = InlineKeyboardBuilder()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç—Ç–∞–∂–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–¥–∞–Ω–∏—è
    data_state = FloorDbBl.get_floors_by_building(building_id)
    if isinstance(data_state, DataSuccess):
        for floor in data_state.data:
            builder.button(
                text=floor.name,
                callback_data=FloorCallbackFactory(building_id=building_id, floor_id=floor.id)
            )
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        builder.button(text="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ç–∞–∂–µ–π", callback_data="error")

    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –∫ –∑–¥–∞–Ω–∏—è–º",
        callback_data=BackToBuildingCallbackFactory()
    )
    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data=BackToMenuCallbackFactory()
    )
    builder.adjust(1)
    return builder.as_markup()


def get_sections_keyboard(building_id: int, floor_id: int):
    builder = InlineKeyboardBuilder()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–¥–µ–ª–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç—Ç–∞–∂–∞
    data_state = SectionDbBl.get_sections_by_floor(floor_id)
    if isinstance(data_state, DataSuccess):
        for section in data_state.data:
            builder.button(
                text=section.name,
                callback_data=SectionCallbackFactory(building_id=building_id, floor_id=floor_id, section_id=section.id)
            )
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        builder.button(text="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤", callback_data="error")

    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –∫ —ç—Ç–∞–∂–∞–º",
        callback_data=BackCallbackFactory(action="to_floors", building_id=building_id)
    )
    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data=BackToMenuCallbackFactory()
    )
    builder.adjust(1)
    return builder.as_markup()